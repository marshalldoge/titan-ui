{"version":3,"sources":["views/Warehouse/Warehouse.js"],"names":["TButton","React","lazy","WarehouseTable","Warehouse","state","columns","data","columnDefs","headerName","field","width","windowHeight","document","body","clientHeight","onRowClick","record","console","log","props","history","push","pathname","search","id","goToClientForm","page","headers","Authorization","getCookie","me","this","params","idCompany","pageSize","url","withParams","constants","fetch","method","then","response","json","success","setState","prevState","pageData","content","catch","error","Math","floor","type","justify","span","style","textAlign","label","size","onClick","Component","withRouter","connect","appUserReducer","companyReducer","clientCount"],"mappings":"gPASMA,G,aAAUC,IAAMC,MAAK,kBAAM,wDAC3BC,EAAiBF,IAAMC,MAAK,kBAAM,kCAElCE,E,4MAEFC,MAAM,CACFC,QAAS,GACTC,KAAM,GACNC,WAAY,CACR,CAACC,WAAY,KAAMC,MAAO,KAAMC,MAAO,OACvC,CAACF,WAAY,SAAUC,MAAO,OAAQC,MAAO,OAC7C,CAACF,WAAY,eAAaC,MAAO,WAAYC,MAAO,OACpD,CAACF,WAAY,QAASC,MAAO,QAASC,MAAO,QAEjDC,aAAcC,SAASC,KAAKC,c,EAkChCC,WAAa,SAAAC,GAETC,QAAQC,IAAI,gBAAgBF,GAC5B,EAAKG,MAAMC,QAAQC,KAAK,CACpBC,SAAU,mBACVC,OAAQ,gBAAkBP,EAAOQ,M,EAIzCC,eAAiB,WACb,EAAKN,MAAMC,QAAQC,KAAK,iB,kEAzCRK,GAChBT,QAAQC,IAAI,iBAAiBQ,GAC7B,IAAMC,EAAU,CACZ,eAAgB,kCAChBC,cAAeC,YAAU,QAEzBC,EAAKC,KACLC,EAAS,CACTC,UAAWF,KAAKZ,MAAMc,UACtBP,KAAMA,EACNQ,SAAU,IAERC,EAAMC,YAAWC,IAAwB,sCAAuCL,GACtFM,MAAMH,EAAK,CACPI,OAAQ,MACRZ,QAASA,IACVa,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACvBF,MAAK,SAAUC,GAETA,EAASE,SAERb,EAAGc,UAAU,SAACC,GAEV,OADAA,EAAUC,SAASpB,GAAMe,EAASnC,KAAKyC,QAChCF,QAGhBG,OAAM,SAAUC,GACpBhC,QAAQC,IAAI+B,Q,+BAoBhB,OAFAhC,QAAQC,IAAI,UAAUa,KAAKZ,OAC3BF,QAAQC,IAAI,mCAAmCgC,KAAKC,MAAMpB,KAAK3B,MAAMO,aAAa,MAE7E,6BACI,kBAACT,EAAD,MACA,kBAAC,IAAD,CAAKkD,KAAK,OAAOC,QAAQ,OACrB,kBAAC,IAAD,CAAKC,KAAM,EAAGC,MAAS,CAACC,UAAU,QAC9B,kBAACzD,EAAD,CACG0D,MAAO,mBACPC,KAAM,QACNC,QAAS5B,KAAKN,eACd2B,KAAM,mB,GAtEVQ,aAuFTC,sBAAWC,aARF,SAAA1D,GAAU,IACtB2D,EAAmC3D,EAAnC2D,eACA9B,GADmC7B,EAAnB4D,eACFD,EAAd9B,WACAgC,EAAgB,GAAhBA,YAER,OADAhD,QAAQC,IAAI,iBAAiB+C,GACtB,CAAChC,YAAWgC,iBAGGH,CAAyB3D","file":"static/js/69.df7c90a2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport { getCookie, withParams} from \"../../utils.js\";\nimport * as constants from \"../../constants\"\nimport {connect} from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport \"./_Warehouse.scss\";\n\nconst TButton = React.lazy(() => import(\"../../components/TButton/TButton\"));\nconst WarehouseTable = React.lazy(() => import(\"../../components/WarehouseTable/WarehouseTable\"));\n\nclass Warehouse extends Component {\n    // TODO Add Date of last sale to table\n    state={\n        columns: [],\n        data: [],\n        columnDefs: [\n            {headerName: \"ID\", field: \"id\", width: \"10%\"},\n            {headerName: \"Nombre\", field: \"name\", width: \"45%\"},\n            {headerName: \"Ubicación\", field: \"location\", width: \"30%\"},\n            {headerName: \"Color\", field: \"color\", width: \"15%\"}\n        ],\n        windowHeight: document.body.clientHeight\n    };\n\n    loadClientTablePage(page) {\n        console.log(\"Loading page: \",page);\n        const headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let me = this;\n        let params = {\n            idCompany: this.props.idCompany,\n            page: page,\n            pageSize: 25\n        };\n        const url = withParams(constants.BACKEND_URL + \"/Warehouse/findByIdCompanyPaginated\", params);\n        fetch(url, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n             .then(function (response) {\n                 //console.log(\"me in getpage fetch is \",me);\n                 if(response.success){\n                     //console.log(\"Page data received: \",response);\n                     me.setState ((prevState) =>{\n                         prevState.pageData[page]=response.data.content;\n                         return prevState;\n                     });\n                 }\n             }).catch(function (error) {\n            console.log(error);\n        });\n    };\n\n    onRowClick = record => {\n        //const idSale = record.id;\n        console.log(\"Clicked row: \",record);\n        this.props.history.push({\n            pathname: \"WarehouseProfile\",\n            search: \"?idWarehouse=\" + record.id\n        })\n    };\n\n    goToClientForm = () => {\n        this.props.history.push(\"/AppUserForm\");\n    };\n\n    render() {\n        console.log(\"Props: \",this.props);\n        console.log(\"Number of rows in client table: \",Math.floor(this.state.windowHeight/100));\n        return (\n             <div>\n                 <WarehouseTable/>\n                 <Row type=\"flex\" justify=\"end\">\n                     <Col span={6} style = {{textAlign:\"end\"}}>\n                         <TButton\n                            label={\"Crear Almacén\"}\n                            size={\"small\"}\n                            onClick={this.goToClientForm}\n                            type={\"inverse\"}\n                         />\n                     </Col>\n                 </Row>\n             </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { appUserReducer, companyReducer } = state;\n    const { idCompany } = appUserReducer;\n    const { clientCount } = 1;\n    console.log(\"Client count: \",clientCount);\n    return {idCompany, clientCount};\n};\n\nexport default withRouter(connect(mapStateToProps)(Warehouse));\n"],"sourceRoot":""}