{"version":3,"sources":["components/OrderTable/OrderTable.js"],"names":["MessageModal","React","lazy","PaginatedLazyTable","OrderTable","props","state","columns","data","columnDefs","headerName","field","width","render","row","moment","format","type","size","onClick","e","sendMessage","windowHeight","document","body","clientHeight","isModalOpen","messageInformation","bind","page","console","log","headers","Authorization","getCookie","me","this","params","idCompany","pageSize","url","withParams","constants","fetch","method","then","response","json","success","setState","prevState","pageData","content","catch","error","event","stopPropagation","loadTablePage","loadClientTablePage","length","clientCount","title","Math","floor","isOpen","onClose","Component","withRouter","connect","appUserReducer","companyReducer"],"mappings":"yPAUMA,EAAeC,IAAMC,MAAK,kBAAM,+EAChCC,EAAoBF,IAAMC,MAAK,kBAAM,6EAErCE,E,kDACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAIJC,MAAM,CACFC,QAAS,GACTC,KAAM,GACNC,WAAY,CACR,CAACC,WAAY,KAAMC,MAAO,KAAMC,MAAO,MACvC,CAACF,WAAY,cAAeC,MAAO,kBAAmBC,MAAO,OAC7D,CAACF,WAAY,UAAWC,MAAO,QAASC,MAAO,OAC/C,CAACF,WAAY,iBAAkBC,MAAO,aAAcC,MAAO,OAC3D,CAACF,WAAY,QACZG,OAAO,SAACC,GACJ,OACE,2BAAIC,IAAOD,EAAG,mBAAuBE,OAAO,eAGlDJ,MAAO,OACX,CAACF,WAAY,UACZG,OAAO,SAACC,GAAD,OACL,kBAAC,IAAD,CAAQG,KAAK,OAAOC,KAAM,QAASC,QAAS,SAACC,GAAD,OAAO,EAAKC,YAAYD,EAAEN,KAAtE,YAGFF,MAAO,QAGTU,aAAcC,SAASC,KAAKC,aAC/BC,aAAa,EACbC,mBAAoB,IA5BvB,EAAKN,YAAc,EAAKA,YAAYO,KAAjB,gBAFD,E,gEAiCIC,GAChBC,QAAQC,IAAI,iBAAiBF,GAC7B,IAAMG,EAAU,CACZ,eAAgB,kCAChBC,cAAeC,YAAU,QAEzBC,EAAKC,KACLC,EAAS,CACTC,UAAWF,KAAK/B,MAAMiC,UACtBT,KAAMA,EACNU,SAAU,IAERC,EAAMC,YAAWC,IAAwB,mBAAoBL,GACnEM,MAAMH,EAAK,CACPI,OAAQ,MACRZ,QAASA,IACVa,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACvBF,MAAK,SAAUC,GAETA,EAASE,SAERb,EAAGc,UAAU,SAACC,GAEV,OADAA,EAAUC,SAAStB,GAAMiB,EAAStC,KAAK4C,QAChCF,QAGhBG,OAAM,SAAUC,GACpBxB,QAAQC,IAAIuB,Q,kCAIXC,EAAOzC,GAClByC,EAAMC,kBACN1B,QAAQC,IAAI,kCAAkCjB,GAC9CsB,KAAKa,UAAS,SAAAC,GAGb,OAFAA,EAAUvB,mBAAqBb,EAC/BoC,EAAUxB,aAAc,EACjBwB,O,+BAKI,IAAD,OACL,OACK,6BACI,kBAAC/C,EAAD,CACKmC,UAAWF,KAAK/B,MAAMiC,UACtB7B,WAAY2B,KAAK9B,MAAMG,WACvBgD,cAAerB,KAAKsB,oBACpBC,OAAQvB,KAAK/B,MAAMuD,YACnBC,MAAO,UACPtB,SAAUuB,KAAKC,MAAM3B,KAAK9B,MAAMgB,aAAa,MAErD,kBAACtB,EAAD,CACEgE,OAAQ5B,KAAK9B,MAAMoB,YACnBC,mBAAoBS,KAAK9B,MAAMqB,mBAC/BsC,QAAS,kBAAI,EAAKhB,SAAS,CAC1BvB,aAAa,Y,GA3FLwC,aA2GVC,sBAAWC,aARF,SAAA9D,GAAU,IACtB+D,EAAmC/D,EAAnC+D,eACA/B,GADmChC,EAAnBgE,eACFD,EAAd/B,WACAsB,EAAgB,GAAhBA,YAER,OADA9B,QAAQC,IAAI,iBAAiB6B,GACtB,CAACtB,YAAWsB,iBAGGQ,CAAyBhE,K","file":"static/js/61.34e25e4c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Row, Col, Button } from \"antd\";\nimport { getCookie, withParams} from \"../../utils.js\";\nimport * as constants from \"../../constants\"\nimport {connect} from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport \"./_OrderTable.scss\";\nimport moment from 'moment';\n\nconst MessageModal = React.lazy(() => import(\"../../components/MessageModal/MessageModal\"));\nconst PaginatedLazyTable= React.lazy(() => import(\"../../components/PaginatedLazyTable/PaginatedLazyTable\"));\n\nclass OrderTable extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.sendMessage = this.sendMessage.bind(this);\n\t};\n    // TODO Add Date of last sale to table\n    state={\n        columns: [],\n        data: [],\n        columnDefs: [\n            {headerName: \"ID\", field: \"id\", width: \"5%\"},\n            {headerName: \"Medicamento\", field: \"itemDescription\", width: \"25%\"},\n            {headerName: \"Celular\", field: \"phone\", width: \"15%\"},\n            {headerName: \"Nombre Persona\", field: \"clientName\", width: \"20%\"},\n            {headerName: \"Fecha\",\n\t            render:(row) => {\n            \t    return (\n\t\t                 <p>{moment(row[\"creationTimeStamp\"]).format(\"d/MM/YYYY\")}</p>\n\t                )\n\t            },\n\t            width: \"20%\"},\n\t        {headerName: \"Mensaje\",\n\t\t        render:(row) =>\n\t\t\t         <Button type=\"link\" size={'small'} onClick={(e) => this.sendMessage(e,row)}>\n\t\t\t\t         Mensaje\n\t\t\t         </Button>,\n\t\t        width: \"15%\"\n\t        }\n        ],\n        windowHeight: document.body.clientHeight,\n\t    isModalOpen: false,\n\t    messageInformation: {}\n    };\n\n    loadClientTablePage(page) {\n        console.log(\"Loading page: \",page);\n        const headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let me = this;\n        let params = {\n            idCompany: this.props.idCompany,\n            page: page,\n            pageSize: 25\n        };\n        const url = withParams(constants.BACKEND_URL + \"/Order/paginated\", params);\n        fetch(url, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n             .then(function (response) {\n                 //console.log(\"me in getpage fetch is \",me);\n                 if(response.success){\n                     //console.log(\"Page data received: \",response);\n                     me.setState ((prevState) =>{\n                         prevState.pageData[page]=response.data.content;\n                         return prevState;\n                     });\n                 }\n             }).catch(function (error) {\n            console.log(error);\n        });\n    };\n\n\tsendMessage(event, row){\n\t\tevent.stopPropagation();\n\t\tconsole.log(\"Message sent with information; \",row);\n\t\tthis.setState(prevState => {\n\t\t\tprevState.messageInformation = row;\n\t\t\tprevState.isModalOpen = true;\n\t\t\treturn prevState;\n\t\t})\n\t}\n\n\n    render() {\n        return (\n             <div>\n                 <PaginatedLazyTable\n                      idCompany={this.props.idCompany}\n                      columnDefs={this.state.columnDefs}\n                      loadTablePage={this.loadClientTablePage}\n                      length={this.props.clientCount}\n                      title={\"Pedidos\"}\n                      pageSize={Math.floor(this.state.windowHeight/70)}\n                 />\n\t             <MessageModal\n\t\t              isOpen={this.state.isModalOpen}\n\t\t              messageInformation={this.state.messageInformation}\n\t\t              onClose={()=>this.setState({\n\t\t\t              isModalOpen: false\n\t\t              })}\n\t             />\n             </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { appUserReducer, companyReducer } = state;\n    const { idCompany } = appUserReducer;\n    const { clientCount } = 1;\n    console.log(\"Client count: \",clientCount);\n    return {idCompany, clientCount};\n};\n\nexport default withRouter(connect(mapStateToProps)(OrderTable));\n"],"sourceRoot":""}