{"version":3,"sources":["views/Shift/Shift.js"],"names":["Button","React","lazy","PaginatedLazyTable","Shift","state","cashOpen","inShift","props","columnDefs","headerName","field","width","windowHeight","document","body","clientHeight","now","moment","createShift","headers","Authorization","getCookie","params","idAppUser","action","time","timeOpened","clone","openFormatted","format","JSON","stringify","cashClosed","open","idCompany","saleCount","me","url","withParams","constants","fetch","method","then","response","json","data","console","log","setState","setIdShift","openShift","closeShift","closeFormatted","diff","duration","asSeconds","id","idShift","cashClose","close","setShift","goToMakeSaleForm","history","push","MakeSaleButton","label","size","onClick","OpenShiftButton","CloseShiftButton","type","onRowClick","record","pathname","search","SaleTable","clientHashMap","currencyHashMap","loadTablePage","loadSaleTablePageByIdShift","length","title","pageSize","prevProps","prevState","snapshot","page","this","success","i","content","idCurrency","billName","abbreviation","pageData","catch","error","style","height","paddingTop","justify","span","textAlign","Component","withRouter","connect","appUserReducer","shiftReducer","currencyReducer","clientReducer"],"mappings":"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","file":"static/js/53.f0917101.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"../../stylesheets/layout/_adminLayout.scss\";\nimport \"../../redux/reducers/appUserReducer\"\nimport \"../../stylesheets/views/shift/_shift.scss\"\nimport {connect} from \"react-redux\";\nimport moment from \"moment\";\nimport {deleteCookie, getCookie, withParams} from \"../../utils\";\nimport * as constants from \"../../constants\";\nimport \"./_Shift.scss\";\nimport {closeShift, openShift, setIdShift, setShift} from \"../../redux/actions\";\nimport clientReducer from \"../../redux/reducers/clientReducer\";\n\nconst Button = React.lazy(() => import(\"../../components/TButton/TButton\"));\nconst PaginatedLazyTable= React.lazy(() => import(\"../../components/PaginatedLazyTable/PaginatedLazyTable\"));\n\nclass Shift extends Component {\n\n    state = {\n        cashOpen:0,\n        inShift:this.props.inShift,\n        columnDefs: [\n            {headerName: \"ID\", field: \"id\", width: \"10%\"},\n            {headerName: \"Hora\", field: \"time\", width: \"15%\"},\n            {headerName: \"Cliente\", field: \"billName\", width: \"30%\"},\n            {headerName: \"Pagado\", field: \"paid\", width: \"15%\"},\n            {headerName: \"Total\", field: \"total\", width: \"15%\"},\n            {headerName: \"Moneda\", field: \"currency\", width: \"15%\"}\n        ],\n        windowHeight: document.body.clientHeight,\n        now: moment()\n    };\n\n    componentDidMount() {\n\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n       /* if (this.props.inShift !== prevProps.inShift) {\n            console.log(\"Past idShift: \",prevProps.inShift,\" vs current: \",this.props.inShift);\n            if(this.props.inShift) {\n                this.setState({cardDisplayed: \"Shift\"});\n            }else{\n                this.setState({cardDisplayed: \"NotOpened\"});\n            }\n        }\n\n        */\n    }\n    componentWillUnmount() {\n\n    }\n\n    createShift = () => {\n        let headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let params = {\n            idAppUser: this.props.idAppUser,\n            action: \"create\",\n            time: this.state.now\n        };\n        let timeOpened = this.state.now.clone();\n        let openFormatted = timeOpened.format(\"YYYY-MM-DD[T]HH:mm:ss\");\n        let body =JSON.stringify({\n            idAppUser:this.props.idAppUser,\n            cashOpen:this.state.cashOpen,\n            cashClosed:this.state.cashOpen,\n            open:openFormatted,\n            idCompany: this.props.idCompany,\n            saleCount:this.props.saleCount\n        });\n        let me = this;\n        let url = withParams(constants.BACKEND_URL+\"/Shift\", params);\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: body\n        })\n             .then(response => response.json())\n             .then(function (data) {\n                 console.log(\"Shift created and retrieved forn database: \",data);\n                 me.setState({open:timeOpened},() =>{\n                     me.props.setIdShift(data);\n                     data[\"open\"]=timeOpened;\n                     me.props.openShift(data);\n                     me.setState({inShift: true});\n                 });\n             });\n    };\n\n    closeShift = () => {\n        let headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let params = {\n            idAppUser: this.props.idAppUser,\n            action: \"update\"\n        };\n        let timeClosed = this.state.now.clone();\n        let closeFormatted = timeClosed.format(\"YYYY-MM-DD[T]HH:mm:ss\");\n\n        //Duration of shift\n        let now = this.state.now;\n        let open = this.props.open;\n        //console.log(\"CLOSE SHIFT: open: \",open,\" to now: \",now);\n        let diff = now.diff(open);\n        //console.log(\"DIFF: \",diff);\n        let duration = moment.duration(diff).asSeconds();\n        //console.log(\"DURATION :\",duration);\n\n        let body =JSON.stringify({\n            id: this.props.idShift,\n            idAppUser:this.props.idAppUser,\n            cashClose:this.state.cashClose,\n            close:closeFormatted,\n            duration:duration\n        });\n        let me = this;\n        let url = withParams(constants.BACKEND_URL+\"/Shift\", params);\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: body\n        })\n             .then(response => response.json())\n             .then(function (data) {\n                 data.id=null;\n                 me.props.setShift(data);\n                 me.props.setIdShift(data);\n                 me.props.closeShift();\n                 me.setState({inShift:false});\n             });\n    };\n\n    goToMakeSaleForm = () => {\n        this.props.history.push(\"/MakeSaleForm\");\n    };\n\n    MakeSaleButton = () => {\n        return (\n             <Button\n                  label={\"Realizar Venta\"}\n                  size={\"expanded\"}\n                  onClick={this.goToMakeSaleForm}\n             />\n        );\n    };\n\n    OpenShiftButton = () => {\n        return (\n             <Button\n                label={\"Abrir Caja\"}\n                size={\"expanded\"}\n                onClick={this.createShift}\n             />\n        );\n    };\n\n    CloseShiftButton = () => {\n        return (\n             <Button\n                  label={\"Cerrar Caja\"}\n                  size={\"medium\"}\n                  onClick={this.closeShift}\n                  type={\"inverse\"}\n             />\n        );\n    };\n\n    loadSaleTablePageByIdShift(page) {\n        //console.log(\"sale tale props: \",this.props);\n        //console.log(\"Loading page: \",page);\n        var headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let me = this;\n        let params = {\n            idAppUser: this.props.idAppUser,\n            idShift: this.props.idShift,\n            page: page,\n            pageSize: this.props.pageSize\n        };\n        let url = withParams(constants.BACKEND_URL + \"/Sale/findSaleByIdAppUserAndIdShiftPaginated\", params);\n        fetch(url, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n             .then(function (response) {\n                 //console.log(\"me in getpage fetch is \",me);\n                 if(response.success){\n                     //console.log(\"Page data received: \",response);\n                     me.setState ((prevState) =>{\n                         for(let i=0;i<response.data.content.length;i++){\n                             response.data.content[i].time =\n                                  moment(response.data.content[i].time,\"YYYY-MM-DD[T]HH:mm:ss\").format(\"HH:mm:ss\");\n                             response.data.content[i][\"billName\"] = me.props.clientHashMap[response.data.content[i].idCurrency].billName;\n                             response.data.content[i][\"currency\"] = me.props.currencyHashMap[response.data.content[i].idCurrency].abbreviation;\n                             console.log(\"new: \",response.data.content[i][\"currency\"]);\n                         }\n                         prevState.pageData[page]=response.data.content;\n                         console.log(\"New state:\",prevState);\n                         return prevState;\n                     });\n                 }\n             }).catch(function (error) {\n            console.log(error);\n        });\n    };\n\n    onRowClick = record => {\n        this.props.history.push({\n            pathname: \"SaleProfile\",\n            search: \"?idSale=\" + record.id\n        })\n    };\n\n    SaleTable = () => {\n        return(\n             <PaginatedLazyTable\n                  clientHashMap = {this.props.clientHashMap}\n                  currencyHashMap = {this.props.currencyHashMap}\n                  idAppUser={this.props.idAppUser}\n                  idShift={this.props.idShift}\n                  columnDefs={this.state.columnDefs}\n                  loadTablePage={this.loadSaleTablePageByIdShift}\n                  length={12}\n                  onRowClick={this.onRowClick}\n                  title={\"Ventas\"}\n                  pageSize={11}\n             />\n        );\n    };\n\n    render() {\n        console.log(\"inShift? \",this.state.inShift);\n        return (\n             <div>\n                 <Row style={{height: \"60px\",paddingTop: \"10px\"}} type=\"flex\" justify=\"center\">\n                     <Col span={24}>\n                         {this.state.inShift?this.MakeSaleButton():this.OpenShiftButton()}\n                     </Col>\n                 </Row>\n                 <Row type=\"flex\" justify=\"center\">\n                     <Col span={24}>\n                         { this.state.inShift && this.SaleTable()}\n                     </Col>\n                 </Row>\n                 <Row type=\"flex\" justify=\"end\">\n                     <Col span={6} style={{textAlign: \"end\"}}>\n                         {this.state.inShift && this.CloseShiftButton()}\n                     </Col>\n                 </Row>\n             </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { appUserReducer, shiftReducer, currencyReducer, clientReducer } = state;\n    const { idAppUser, idShift, inShift, saleCount } = appUserReducer;\n    const { open } = shiftReducer;\n    const { currencyHashMap } = currencyReducer;\n    const { clientHashMap } = clientReducer;\n    console.log(\"idShift Received: \",idShift);\n    return {idAppUser, idShift, open, inShift, saleCount, currencyHashMap, clientHashMap};\n};\n\nexport default withRouter(connect(mapStateToProps,{openShift, setIdShift, closeShift, setShift})(Shift));\n"],"sourceRoot":""}