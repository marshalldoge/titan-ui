{"version":3,"sources":["components/SupplierTable/SupplierTable.js"],"names":["PaginatedLazyTable","React","lazy","SupplierTable","props","state","columnDefs","headerName","field","width","loadPageFunction","length","windowHeight","document","body","clientHeight","onRowClick","record","console","log","history","push","pathname","search","id","page","headers","Authorization","getCookie","me","this","params","idCompany","pageSize","url","withParams","constants","fetch","method","then","response","json","success","setState","prevState","pageData","data","content","catch","error","style","textAlign","loadTablePage","loadSupplierTablePage","shiftCount","title","Component","withRouter","connect","appUserReducer","companyReducer","supplierCount"],"mappings":"8NASMA,G,mBAAoBC,IAAMC,MAAK,kBAAM,6EAErCC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAGVC,MAAM,CACFC,WAAY,CACR,CAACC,WAAY,KAAMC,MAAO,KAAMC,MAAO,OACvC,CAACF,WAAY,SAAUC,MAAO,WAAYC,MAAO,OACjD,CAACF,WAAY,UAAWC,MAAO,YAAaC,MAAO,QAEvDC,iBAAkB,KAClBC,OAAQ,KACRC,aAAcC,SAASC,KAAKC,cAZb,EAiDnBC,WAAa,SAAAC,GAETC,QAAQC,IAAI,gBAAgBF,GAC5B,EAAKb,MAAMgB,QAAQC,KAAK,CACpBC,SAAU,kBACVC,OAAQ,eAAiBN,EAAOO,MAtDrB,E,+GAkBGC,GAClBP,QAAQC,IAAI,0BAA0BM,GACtC,IAAIC,EAAU,CACV,eAAgB,kCAChBC,cAAeC,YAAU,QAEzBC,EAAKC,KACLC,EAAS,CACTC,UAAWF,KAAK1B,MAAM4B,UACtBP,KAAMA,EACNQ,SAAU,IAEVC,EAAMC,YAAWC,IAAsB,wCAAwCL,GACnFM,MAAMH,EAAK,CACPI,OAAQ,MACRZ,QAASA,IACVa,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACvBF,MAAK,SAASC,GACTA,EAASE,SACRb,EAAGc,UAAS,SAACC,GAGT,OAFA1B,QAAQC,IAAI,kCAAkCyB,GAC9CA,EAAUC,SAASpB,GAAQe,EAASM,KAAKC,QAClCH,QAIhBI,OAAM,SAAUC,GACnB/B,QAAQC,IAAI8B,Q,+BAehB,OADA/B,QAAQC,IAAI,UAAUW,KAAK1B,OAEtB,yBAAK8C,MAAO,CAACC,UAAU,WACnB,kBAACnD,EAAD,CACKgC,UAAWF,KAAK1B,MAAM4B,UACtB1B,WAAYwB,KAAKzB,MAAMC,WACvB8C,cAAetB,KAAKuB,sBACpB1C,OAAQmB,KAAK1B,MAAMkD,WACnBtC,WAAYc,KAAKd,WACjBiB,SAAU,GACVsB,MAAO,qB,GAtEDC,aAqFbC,sBAAWC,aARF,SAAArD,GAAU,IACtBsD,EAAmCtD,EAAnCsD,eAAgBC,EAAmBvD,EAAnBuD,eAChB5B,EAAc2B,EAAd3B,UACA6B,EAAkBD,EAAlBC,cAER,OADA3C,QAAQC,IAAI,4BAA4Ba,GACjC,CAACA,YAAW6B,mBAGGH,CAAyBvD","file":"static/js/64.87e32d4e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter} from \"react-router-dom\";\nimport { getCookie, withParams} from \"../../utils.js\";\nimport * as constants from \"../../constants\"\nimport {connect} from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport \"../../stylesheets/components/appUserTable/_appUserTable.scss\";\nimport moment from 'moment';\n\nconst PaginatedLazyTable= React.lazy(() => import(\"../../components/PaginatedLazyTable/PaginatedLazyTable\"));\n\nclass SupplierTable extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state={\n        columnDefs: [\n            {headerName: \"ID\", field: \"id\", width: \"10%\"},\n            {headerName: \"Nombre\", field: \"fullName\", width: \"60%\"},\n            {headerName: \"Celular\", field: \"cellphone\", width: \"30%\"},\n        ],\n        loadPageFunction: null,\n        length: null,\n        windowHeight: document.body.clientHeight\n    };\n\n    componentDidMount() {\n    }\n\n    loadSupplierTablePage(page){\n        console.log(\"SUPPLIER Loading page: \",page);\n        var headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let me = this;\n        let params = {\n            idCompany: this.props.idCompany,\n            page: page,\n            pageSize: 12\n        };\n        var url = withParams(constants.BACKEND_URL+\"/Supplier/findAllByIdCompanyPaginated\",params);\n        fetch(url, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n             .then(function(response) {\n                if(response.success) {\n                    me.setState((prevState) => {\n                        console.log(\"SUPPLIER prevstate looks like: \",prevState);\n                        prevState.pageData[page] = response.data.content;\n                        return prevState;\n                    });\n                }\n\n            }).catch(function (error) {\n            console.log(error);\n        });\n    };\n\n    onRowClick = record => {\n        //const idSale = record.id;\n        console.log(\"Clicked row: \",record);\n        this.props.history.push({\n            pathname: \"SupplierProfile\",\n            search: \"?idSupplier=\" + record.id\n        })\n    };\n\n    render() {\n        console.log(\"Props: \",this.props);\n        return (\n             <div style={{textAlign:\"center\"}}>\n                 <PaginatedLazyTable\n                      idCompany={this.props.idCompany}\n                      columnDefs={this.state.columnDefs}\n                      loadTablePage={this.loadSupplierTablePage}\n                      length={this.props.shiftCount}\n                      onRowClick={this.onRowClick}\n                      pageSize={12}\n                      title={\"Proveedores\"}\n                 />\n             </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { appUserReducer, companyReducer } = state;\n    const { idCompany } = appUserReducer;\n    const { supplierCount } = companyReducer;\n    console.log(\"idCompany for tableUser: \",idCompany);\n    return {idCompany, supplierCount};\n};\n\nexport default withRouter(connect(mapStateToProps)(SupplierTable));\n"],"sourceRoot":""}