{"version":3,"sources":["components/PurchaseTable/PurchaseTable.js","views/Purchase/Purchase.js"],"names":["PaginatedLazyTable","React","lazy","PurchaseTable","state","columns","data","columnDefs","headerName","field","width","loadPageFunction","length","windowHeight","document","body","clientHeight","setLoadPageFunction","console","log","props","filterModel","setState","loadPurchaseTablePageByIdAppUser","loadPurchaseTablePageByIdCompany","loadPurchaseTablePageByIdClient","setLength","appUserPurchaseCount","clientPurchaseCount","onRowClick","record","history","push","pathname","search","id","idCompany","idAppUser","idClient","idShift","loadTablePage","title","pageSize","Math","floor","this","page","headers","Authorization","getCookie","me","params","url","withParams","constants","fetch","method","then","response","json","success","prevState","i","content","time","moment","format","pageData","catch","error","Component","withRouter","connect","ownProps","appUserReducer","moduleReducer","companyReducer","clientReducer","modules","purchaseCount","companyPurchaseCount","clientHashMap","TButton","Purchase","loadItemButton","Modules","actions","onClick","goToPurchasemManager","type","label","AvailablePurchaseTable","size","justify","align","span","style","textAlign"],"mappings":"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","file":"static/js/68.9e95690b.chunk.js","sourcesContent":["import React, { Component} from \"react\";\nimport { withRouter} from \"react-router-dom\";\nimport {Col, Table} from \"antd\";\nimport { getCookie, withParams} from \"../../utils.js\";\nimport * as constants from \"../../constants\"\nimport {connect} from \"react-redux\";\nimport moment from \"moment\";\nimport \"antd/dist/antd.css\";\nimport \"../../redux/reducers/moduleReducer\"\nimport \"../../stylesheets/components/appUserTable/_appUserTable.scss\";\n\nconst PaginatedLazyTable= React.lazy(() => import(\"../../components/PaginatedLazyTable/PaginatedLazyTable\"));\n\nclass PurchaseTable extends Component {\n\n    state= {\n        columns: [],\n        data: [],\n        columnDefs: [\n            {headerName: \"ID\", field: \"id\", width: \"10%\"},\n            {headerName: \"Hora\", field: \"time\", width: \"15%\"},\n            {headerName: \"Proveedor\", field: \"idSupplier\", width: \"30%\"},\n            {headerName: \"Pagado\", field: \"paid\", width: \"15%\"},\n            {headerName: \"Total\", field: \"total\", width: \"15%\"},\n            {headerName: \"Moneda\", field: \"idCurrency\", width: \"15%\"}\n        ],\n        loadPageFunction: null,\n        length: 5,\n        windowHeight: document.body.clientHeight\n    };\n\n    componentDidMount() {\n        this.setLoadPageFunction();\n        this.setLength();\n    }\n\n    setLoadPageFunction = () => {\n        console.log(\"SALE TABLE RENDERING: \",this.props.filterModel);\n        switch(this.props.filterModel){\n            case \"appUser\":\n                this.setState({loadPageFunction:this.loadPurchaseTablePageByIdAppUser});\n                break;\n            case \"company\":\n                this.setState({loadPageFunction:this.loadPurchaseTablePageByIdCompany});\n                break;\n            case \"client\":\n                this.setState({loadPageFunction:this.loadPurchaseTablePageByIdClient});\n                break;\n            default:\n                console.log(\"No model given for purchase table\");\n                break;\n        }\n    };\n\n    setLength = () => {\n        switch(this.props.filterModel){\n            case \"appUser\":\n                this.setState({length:this.props.appUserPurchaseCount});\n                break;\n            case \"company\":\n                //this.setState({length:this.props.companyPurchaseCount});\n                break;\n            case \"client\":\n                this.setState({length:this.props.clientPurchaseCount});\n                break;\n            default:\n                console.log(\"No model given for purchase table\");\n                break;\n        }\n    };\n\n\n    loadPurchaseTablePageByIdClient(page) {\n        //console.log(\"purchase tale props: \",this.props);\n        //console.log(\"Loading page: \",page);\n        var headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let me = this;\n        let params = {\n            idClient:this.props.idClient,\n            page: page,\n            pageSize: this.props.pageSize\n        };\n        let url = withParams(constants.BACKEND_URL + \"/Purchase/findByIdClientPaginated\", params);\n        fetch(url, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n            .then(function (response) {\n                //console.log(\"me in getpage fetch is \",me);\n                if(response.success){\n                    //console.log(\"Page data received: \",response);\n                    me.setState ((prevState) =>{\n                        for(let i=0;i<response.data.content.length;i++){\n                            response.data.content[i].time =\n                                moment(response.data.content[i].time,\"YYYY-MM-DD[T]HH:mm:ss\").format(\"HH:mm:ss\");\n                        }\n                        prevState.pageData[page]=response.data.content;\n                        console.log(\"New state:\",prevState);\n                        return prevState;\n                    });\n                }\n            }).catch(function (error) {\n            console.log(error);\n        });\n    };\n\n    loadPurchaseTablePageByIdCompany(page) {\n        //console.log(\"purchase tale props: \",this.props);\n        //console.log(\"Loading page: \",page);\n        console.log(\"Loading company purchases: \");\n        var headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let me = this;\n        let params = {\n            idCompany: this.props.idCompany,\n            page: page,\n            pageSize: this.props.pageSize\n        };\n        let url = withParams(constants.BACKEND_URL + \"/Purchase/findByIdCompanyPaginated\", params);\n        fetch(url, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n            .then(function (response) {\n                //console.log(\"me in getpage fetch is \",me);\n                if(response.success){\n                    //console.log(\"Page data received: \",response);\n                    me.setState ((prevState) =>{\n                        for(let i=0;i<response.data.content.length;i++){\n                            response.data.content[i].time =\n                                moment(response.data.content[i].time,\"YYYY-MM-DD[T]HH:mm:ss\").format(\"HH:mm:ss\");\n                        }\n                        prevState.pageData[page]=response.data.content;\n                        console.log(\"New state:\",prevState);\n                        return prevState;\n                    });\n                }\n            }).catch(function (error) {\n            console.log(error);\n        });\n    };\n\n    loadPurchaseTablePageByIdAppUser(page) {\n        //console.log(\"purchase tale props: \",this.props);\n        //console.log(\"Loading page: \",page);\n        var headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let me = this;\n        let params = {\n            idAppUser: this.props.idAppUser,\n            page: page,\n            pageSize: this.props.pageSize\n        };\n        let url = withParams(constants.BACKEND_URL + \"/Purchase/findByIdAppUserPaginated\", params);\n        fetch(url, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n            .then(function (response) {\n                //console.log(\"me in getpage fetch is \",me);\n                if(response.success){\n                    //console.log(\"Page data received: \",response);\n                    me.setState ((prevState) =>{\n                        for(let i=0;i<response.data.content.length;i++){\n                            response.data.content[i].time =\n                                moment(response.data.content[i].time,\"YYYY-MM-DD[T]HH:mm:ss\").format(\"HH:mm:ss\");\n                        }\n                        prevState.pageData[page]=response.data.content;\n                        console.log(\"New state:\",prevState);\n                        return prevState;\n                    });\n                }\n            }).catch(function (error) {\n            console.log(error);\n        });\n    };\n\n    onRowClick = record => {\n        //const idPurchase = record.id;\n        console.log(\"Clicked row: \",record);\n        this.props.history.push({\n            pathname: \"PurchaseProfile\",\n            search: \"?idPurchase=\" + record.id\n        })\n    };\n\n    PurchaseTable = () => {\n        console.log(\"About to render lazy table:\");\n        if(this.state.length && this.state.loadPageFunction){\n            return(\n                <PaginatedLazyTable\n                    idCompany={this.props.idCompany}\n                    idAppUser={this.props.idAppUser}\n                    idClient={this.props.idClient}\n                    idShift={this.props.idShift}\n                    columnDefs={this.state.columnDefs}\n                    loadTablePage={this.state.loadPageFunction}\n                    length={10}\n                    onRowClick={this.onRowClick}\n                    title={\"Compras\"}\n                    pageSize={Math.floor(this.state.windowHeight/50)}\n                />\n            );\n        }else{\n            return null;\n        }\n    };\n\n    render() {\n        //console.log(\"Props: \",this.props);\n        console.log(\"length : \",this.state.length);\n        console.log(\"loadpagefunc: \",this.state.loadPageFunction);\n        return (\n            <div>\n                {this.PurchaseTable()}\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { appUserReducer, moduleReducer, companyReducer, clientReducer } = state;\n    const { idCompany } = appUserReducer;\n    const { modules } = moduleReducer;\n    let appUserPurchaseCount = ownProps.purchaseCount;\n    let companyPurchaseCount = companyReducer.purchaseCount;\n    console.log(\"Clien hashmap: \",clientReducer.clientHashMap);\n    console.log(\"ownprops: \",ownProps);\n    /*let clientPurchaseCount = null;\n    if(ownProps.idClient){\n        clientPurchaseCount = clientReducer.clientHashMap[ownProps.idClient].purchaseCount;\n    }\n\n     */\n    console.log(\"AppUser reducer:\", appUserReducer);\n    return {idCompany,modules,appUserPurchaseCount,companyPurchaseCount};\n};\n\nexport default withRouter(connect(mapStateToProps)(PurchaseTable));\n","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PurchaseTable from \"../../components/PurchaseTable/PurchaseTable\";\nimport {Row, Col} from \"antd\";\n\nconst SaleTable= React.lazy(() => import(\"../../components/SaleTable/SaleTable\"));\nconst TButton= React.lazy(() => import(\"../../components/TButton/TButton\"));\n\nclass Purchase extends Component{\n\n    state={\n\n    };\n\n    componentDidMount() {\n        //this.loadItemFields();\n        //this.loadDestinationWarehouse();\n    }\n\n    loadItemButton = () => {\n        if(this.props.modules.Modules[\"Item\"].actions[\"Create\"]){\n            //console.log(\"RENDERING BUTTON\");\n            return(\n            \t <TButton\n\t\t              onClick={this.goToPurchasemManager}\n\t\t              type={\"inverse\"}\n\t\t              label={\"Realizar Compra\"}\n\t             />\n            );\n        }else{\n            return null;\n        }\n    };\n\n    goToPurchasemManager = () => {\n        this.props.history.push(\"/PurchaseManager\");\n    };\n\n    AvailablePurchaseTable = () => {\n        console.log(\"Modules: \",this.props.modules);\n        //TODO add purhcase model readAll action\n        if(this.props.modules.Modules[\"Sale\"].actions[\"ReadAll\"]){\n            console.log(\"Displaying all company purchases\");\n            return (\n                <PurchaseTable\n                    idCompany={this.props.idCompany}\n                    filterModel={\"company\"}\n                    pageSize={20}\n                />\n            );\n        }else{\n            console.log(\"Displaying sales of this user only\");\n            return (\n                <PurchaseTable\n                    idAppUser={this.props.idAppUser}\n                    filterModel={\"appUser\"}\n                    pageSize={20}\n                    size={\"small\"}\n                />\n            );\n        }\n    };\n\n    render() {\n        return (\n            <div>\n\t            <Row type={\"flex\"} justify={\"end\"} align={\"middle\"}>\n\t\t            <Col span={24}>\n                        {this.AvailablePurchaseTable()}\n\t\t            </Col>\n\t            </Row>\n                <br/>\n                <Row type={\"flex\"} justify={\"end\"} align={\"middle\"}>\n\t                <Col span={6} style={{textAlign:\"end\"}}>\n                        {this.loadItemButton()}\n\t                </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { appUserReducer, moduleReducer } = state;\n    const { idCompany, idAppUser} = appUserReducer;\n    const { modules } = moduleReducer;\n    console.log(\"idCompany for tableUser: \",idCompany);\n    return {idCompany, idAppUser, modules};\n};\n\nexport default withRouter(connect(mapStateToProps)(Purchase));\n"],"sourceRoot":""}