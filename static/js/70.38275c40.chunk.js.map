{"version":3,"sources":["components/SaleTable/SaleTable.js"],"names":["PaginatedLazyTable","React","lazy","SaleTable","state","columns","data","columnDefs","headerName","field","width","loadPageFunction","length","windowHeight","document","body","clientHeight","setLoadPageFunction","console","log","props","filterModel","setState","loadSaleTablePageByIdAppUser","loadSaleTablePageByIdCompany","loadSaleTablePageByIdClient","setLength","appUserSaleCount","companySaleCount","clientSaleCount","onRowClick","record","history","push","pathname","search","id","idCompany","idAppUser","idClient","idShift","loadTablePage","title","pageSize","Math","floor","this","page","headers","Authorization","getCookie","me","params","url","withParams","constants","fetch","method","then","response","json","success","prevState","i","content","time","moment","format","pageData","catch","error","Component","withRouter","connect","ownProps","appUserReducer","moduleReducer","companyReducer","clientReducer","modules","saleCount","clientHashMap"],"mappings":"yNAWMA,G,mBAAoBC,IAAMC,MAAK,kBAAM,6EAErCC,E,4MAEFC,MAAO,CACHC,QAAS,GACTC,KAAM,GACNC,WAAY,CACR,CAACC,WAAY,KAAMC,MAAO,KAAMC,MAAO,OACvC,CAACF,WAAY,OAAQC,MAAO,OAAQC,MAAO,OAC3C,CAACF,WAAY,UAAWC,MAAO,WAAYC,MAAO,OAClD,CAACF,WAAY,SAAUC,MAAO,OAAQC,MAAO,OAC7C,CAACF,WAAY,QAASC,MAAO,QAASC,MAAO,OAC7C,CAACF,WAAY,SAAUC,MAAO,aAAcC,MAAO,QAEvDC,iBAAkB,KAClBC,OAAQ,KACRC,aAAcC,SAASC,KAAKC,c,EAQhCC,oBAAsB,WAElB,OADAC,QAAQC,IAAI,yBAAyB,EAAKC,MAAMC,aACzC,EAAKD,MAAMC,aACd,IAAK,UACD,EAAKC,SAAS,CAACX,iBAAiB,EAAKY,+BACrC,MACJ,IAAK,UACD,EAAKD,SAAS,CAACX,iBAAiB,EAAKa,+BACrC,MACJ,IAAK,SACD,EAAKF,SAAS,CAACX,iBAAiB,EAAKc,8BACrC,MACJ,QACIP,QAAQC,IAAI,mC,EAKxBO,UAAY,WAGR,OADAR,QAAQC,IAAI,0BAA0B,EAAKC,MAAMC,aAC1C,EAAKD,MAAMC,aACd,IAAK,UACDH,QAAQC,IAAI,sBAAsB,EAAKC,MAAMO,kBAC7C,EAAKL,SAAS,CAACV,OAAO,EAAKQ,MAAMO,mBACjC,MACJ,IAAK,UACD,EAAKL,SAAS,CAACV,OAAO,EAAKQ,MAAMQ,mBACjC,MACJ,IAAK,SACD,EAAKN,SAAS,CAACV,OAAO,EAAKQ,MAAMS,kBACjC,MACJ,QACIX,QAAQC,IAAI,mC,EAoHxBW,WAAa,SAAAC,GAETb,QAAQC,IAAI,gBAAgBY,GAC5B,EAAKX,MAAMY,QAAQC,KAAK,CACpBC,SAAU,cACVC,OAAQ,WAAaJ,EAAOK,M,EAIpCjC,UAAY,WACR,OAAwB,MAArB,EAAKC,MAAMQ,QAAkB,EAAKR,MAAMO,iBAEnC,kBAACX,EAAD,CACIqC,UAAW,EAAKjB,MAAMiB,UACtBC,UAAW,EAAKlB,MAAMkB,UACtBC,SAAU,EAAKnB,MAAMmB,SACrBC,QAAS,EAAKpB,MAAMoB,QACpBjC,WAAY,EAAKH,MAAMG,WACvBkC,cAAe,EAAKrC,MAAMO,iBAC1BC,OAAQ,EAAKR,MAAMQ,OACnBkB,WAAY,EAAKA,WACjBY,MAAO,UACPC,SAAU,EAAKvB,MAAMuB,SAAS,EAAKvB,MAAMuB,SAASC,KAAKC,MAAM,EAAKzC,MAAMS,aAAa,MAItF,M,kEAnLXiC,KAAK7B,sBACL6B,KAAKpB,c,kDA0CmBqB,GAGxB,IAAIC,EAAU,CACV,eAAgB,kCAChBC,cAAeC,YAAU,QAEzBC,EAAKL,KACLM,EAAS,CACTb,SAASO,KAAK1B,MAAMmB,SACpBQ,KAAMA,EACNJ,SAAUG,KAAK1B,MAAMuB,UAErBU,EAAMC,YAAWC,IAAwB,gCAAiCH,GAC9EI,MAAMH,EAAK,CACPI,OAAQ,MACRT,QAASA,IACVU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAUC,GAETA,EAASE,SAERV,EAAG7B,UAAU,SAACwC,GACV,IAAI,IAAIC,EAAE,EAAEA,EAAEJ,EAASrD,KAAK0D,QAAQpD,OAAOmD,IACvCJ,EAASrD,KAAK0D,QAAQD,GAAGE,KACrBC,IAAOP,EAASrD,KAAK0D,QAAQD,GAAGE,KAAK,yBAAyBE,OAAO,YAI7E,OAFAL,EAAUM,SAASrB,GAAMY,EAASrD,KAAK0D,QACvC9C,QAAQC,IAAI,aAAa2C,GAClBA,QAGhBO,OAAM,SAAUC,GACnBpD,QAAQC,IAAImD,Q,mDAISvB,GACzB7B,QAAQC,IAAI,oBACZ,IAAI6B,EAAU,CACV,eAAgB,kCAChBC,cAAeC,YAAU,QAEzBC,EAAKL,KACLM,EAAS,CACTf,UAAWS,KAAK1B,MAAMiB,UACtBU,KAAMA,EACNJ,SAAUG,KAAK1B,MAAMuB,UAErBU,EAAMC,YAAWC,IAAwB,iCAAkCH,GAC/EI,MAAMH,EAAK,CACPI,OAAQ,MACRT,QAASA,IACVU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAUC,GAETA,EAASE,SAERV,EAAG7B,UAAU,SAACwC,GACV,IAAI,IAAIC,EAAE,EAAEA,EAAEJ,EAASrD,KAAK0D,QAAQpD,OAAOmD,IACvCJ,EAASrD,KAAK0D,QAAQD,GAAGE,KACrBC,IAAOP,EAASrD,KAAK0D,QAAQD,GAAGE,KAAK,yBAAyBE,OAAO,YAI7E,OAFAL,EAAUM,SAASrB,GAAMY,EAASrD,KAAK0D,QACvC9C,QAAQC,IAAI,qBAAqB2C,GAC1BA,QAGhBO,OAAM,SAAUC,GACnBpD,QAAQC,IAAImD,Q,mDAISvB,GAGzB,IAAIC,EAAU,CACV,eAAgB,kCAChBC,cAAeC,YAAU,QAEzBC,EAAKL,KACLM,EAAS,CACTd,UAAWQ,KAAK1B,MAAMkB,UACtBS,KAAMA,EACNJ,SAAUG,KAAK1B,MAAMuB,UAErBU,EAAMC,YAAWC,IAAwB,iCAAkCH,GAC/EI,MAAMH,EAAK,CACPI,OAAQ,MACRT,QAASA,IACVU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAUC,GAETA,EAASE,SAERV,EAAG7B,UAAU,SAACwC,GACV,IAAI,IAAIC,EAAE,EAAEA,EAAEJ,EAASrD,KAAK0D,QAAQpD,OAAOmD,IACvCJ,EAASrD,KAAK0D,QAAQD,GAAGE,KACrBC,IAAOP,EAASrD,KAAK0D,QAAQD,GAAGE,KAAK,yBAAyBE,OAAO,YAI7E,OAFAL,EAAUM,SAASrB,GAAMY,EAASrD,KAAK0D,QACvC9C,QAAQC,IAAI,aAAa2C,GAClBA,QAGhBO,OAAM,SAAUC,GACnBpD,QAAQC,IAAImD,Q,+BAsChB,OAFApD,QAAQC,IAAI,YAAY2B,KAAK1C,MAAMQ,QACnCM,QAAQC,IAAI,iBAAiB2B,KAAK1C,MAAMO,kBAEpC,6BACKmC,KAAK3C,iB,GAhNEoE,aAsOTC,sBAAWC,aAhBF,SAACrE,EAAOsE,GAAc,IAClCC,EAAiEvE,EAAjEuE,eAAgBC,EAAiDxE,EAAjDwE,cAAeC,EAAkCzE,EAAlCyE,eAAgBC,EAAkB1E,EAAlB0E,cAC/CzC,EAAcsC,EAAdtC,UACA0C,EAAYH,EAAZG,QACJpD,EAAmBgD,EAAeK,UAClCpD,EAAmBiD,EAAeG,UACtC9D,QAAQC,IAAI,kBAAkB2D,EAAcG,eAC5C/D,QAAQC,IAAI,aAAauD,GACzB,IAAI7C,EAAkB,KAKtB,OAJG6C,EAASnC,WACRV,EAAkBiD,EAAcG,cAAcP,EAASnC,UAAUyC,WAErE9D,QAAQC,IAAI,mBAAoBwD,GACzB,CAACtC,YAAU0C,UAAQpD,mBAAiBC,mBAAiBC,qBAGtC4C,CAAyBtE","file":"static/js/70.38275c40.chunk.js","sourcesContent":["import React, { Component} from \"react\";\nimport { withRouter} from \"react-router-dom\";\nimport {Col, Table} from \"antd\";\nimport { getCookie, withParams} from \"../../utils.js\";\nimport * as constants from \"../../constants\"\nimport {connect} from \"react-redux\";\nimport moment from \"moment\";\nimport \"antd/dist/antd.css\";\nimport \"../../redux/reducers/moduleReducer\"\nimport \"../../stylesheets/components/appUserTable/_appUserTable.scss\";\n\nconst PaginatedLazyTable= React.lazy(() => import(\"../../components/PaginatedLazyTable/PaginatedLazyTable\"));\n\nclass SaleTable extends Component {\n\n    state= {\n        columns: [],\n        data: [],\n        columnDefs: [\n            {headerName: \"ID\", field: \"id\", width: \"10%\"},\n            {headerName: \"Hora\", field: \"time\", width: \"15%\"},\n            {headerName: \"Cliente\", field: \"idClient\", width: \"30%\"},\n            {headerName: \"Pagado\", field: \"paid\", width: \"15%\"},\n            {headerName: \"Total\", field: \"total\", width: \"15%\"},\n            {headerName: \"Moneda\", field: \"idCurrency\", width: \"15%\"}\n        ],\n        loadPageFunction: null,\n        length: null,\n        windowHeight: document.body.clientHeight\n    };\n\n    componentDidMount() {\n        this.setLoadPageFunction();\n        this.setLength();\n    }\n\n    setLoadPageFunction = () => {\n        console.log(\"SALE TABLE RENDERING: \",this.props.filterModel);\n        switch(this.props.filterModel){\n            case \"appUser\":\n                this.setState({loadPageFunction:this.loadSaleTablePageByIdAppUser});\n                break;\n            case \"company\":\n                this.setState({loadPageFunction:this.loadSaleTablePageByIdCompany});\n                break;\n            case \"client\":\n                this.setState({loadPageFunction:this.loadSaleTablePageByIdClient});\n                break;\n            default:\n                console.log(\"No model given for sale table\");\n                break;\n        }\n    };\n\n    setLength = () => {\n\n        console.log(\"SALE TABLE filtermodel:\",this.props.filterModel);\n        switch(this.props.filterModel){\n            case \"appUser\":\n                console.log(\"AppUser SaleCount: \",this.props.appUserSaleCount);\n                this.setState({length:this.props.appUserSaleCount});\n                break;\n            case \"company\":\n                this.setState({length:this.props.companySaleCount});\n                break;\n            case \"client\":\n                this.setState({length:this.props.clientSaleCount});\n                break;\n            default:\n                console.log(\"No model given for sale table\");\n                break;\n        }\n    };\n\n\n    loadSaleTablePageByIdClient(page) {\n        //console.log(\"sale tale props: \",this.props);\n        //console.log(\"Loading page: \",page);\n        var headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let me = this;\n        let params = {\n            idClient:this.props.idClient,\n            page: page,\n            pageSize: this.props.pageSize\n        };\n        let url = withParams(constants.BACKEND_URL + \"/Sale/findByIdClientPaginated\", params);\n        fetch(url, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n            .then(function (response) {\n                //console.log(\"me in getpage fetch is \",me);\n                if(response.success){\n                    //console.log(\"Page data received: \",response);\n                    me.setState ((prevState) =>{\n                        for(let i=0;i<response.data.content.length;i++){\n                            response.data.content[i].time =\n                                moment(response.data.content[i].time,\"YYYY-MM-DD[T]HH:mm:ss\").format(\"HH:mm:ss\");\n                        }\n                        prevState.pageData[page]=response.data.content;\n                        console.log(\"New state:\",prevState);\n                        return prevState;\n                    });\n                }\n            }).catch(function (error) {\n            console.log(error);\n        });\n    };\n\n    loadSaleTablePageByIdCompany(page) {\n        console.log(\"asdafsdfasdfasdf\");\n        var headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let me = this;\n        let params = {\n            idCompany: this.props.idCompany,\n            page: page,\n            pageSize: this.props.pageSize\n        };\n        let url = withParams(constants.BACKEND_URL + \"/Sale/findByIdCompanyPaginated\", params);\n        fetch(url, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n            .then(function (response) {\n                //console.log(\"me in getpage fetch is \",me);\n                if(response.success){\n                    //console.log(\"Page data received: \",response);\n                    me.setState ((prevState) =>{\n                        for(let i=0;i<response.data.content.length;i++){\n                            response.data.content[i].time =\n                                moment(response.data.content[i].time,\"YYYY-MM-DD[T]HH:mm:ss\").format(\"HH:mm:ss\");\n                        }\n                        prevState.pageData[page]=response.data.content;\n                        console.log(\"Sale by company: :\",prevState);\n                        return prevState;\n                    });\n                }\n            }).catch(function (error) {\n            console.log(error);\n        });\n    };\n\n    loadSaleTablePageByIdAppUser(page) {\n        //console.log(\"sale tale props: \",this.props);\n        //console.log(\"Loading page: \",page);\n        var headers = {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Authorization: getCookie(\"JWT\")\n        };\n        let me = this;\n        let params = {\n            idAppUser: this.props.idAppUser,\n            page: page,\n            pageSize: this.props.pageSize\n        };\n        let url = withParams(constants.BACKEND_URL + \"/Sale/findByIdAppUserPaginated\", params);\n        fetch(url, {\n            method: \"GET\",\n            headers: headers\n        }).then(response => response.json())\n            .then(function (response) {\n                //console.log(\"me in getpage fetch is \",me);\n                if(response.success){\n                    //console.log(\"Page data received: \",response);\n                    me.setState ((prevState) =>{\n                        for(let i=0;i<response.data.content.length;i++){\n                            response.data.content[i].time =\n                                moment(response.data.content[i].time,\"YYYY-MM-DD[T]HH:mm:ss\").format(\"HH:mm:ss\");\n                        }\n                        prevState.pageData[page]=response.data.content;\n                        console.log(\"New state:\",prevState);\n                        return prevState;\n                    });\n                }\n            }).catch(function (error) {\n            console.log(error);\n        });\n    };\n\n    onRowClick = record => {\n        //const idSale = record.id;\n        console.log(\"Clicked row: \",record);\n        this.props.history.push({\n            pathname: \"SaleProfile\",\n            search: \"?idSale=\" + record.id\n        })\n    };\n\n    SaleTable = () => {\n        if(this.state.length != null && this.state.loadPageFunction){\n            return(\n                <PaginatedLazyTable\n                    idCompany={this.props.idCompany}\n                    idAppUser={this.props.idAppUser}\n                    idClient={this.props.idClient}\n                    idShift={this.props.idShift}\n                    columnDefs={this.state.columnDefs}\n                    loadTablePage={this.state.loadPageFunction}\n                    length={this.state.length}\n                    onRowClick={this.onRowClick}\n                    title={\"Pedidos\"}\n                    pageSize={this.props.pageSize?this.props.pageSize:Math.floor(this.state.windowHeight/50)}\n                />\n            );\n        }else{\n            return null;\n        }\n    };\n\n    render() {\n        //console.log(\"Props: \",this.props);\n        console.log(\"length : \",this.state.length);\n        console.log(\"loadpagefunc: \",this.state.loadPageFunction);\n        return (\n            <div>\n                {this.SaleTable()}\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { appUserReducer, moduleReducer, companyReducer, clientReducer } = state;\n    const { idCompany } = appUserReducer;\n    const { modules } = moduleReducer;\n    let appUserSaleCount = appUserReducer.saleCount;\n    let companySaleCount = companyReducer.saleCount;\n    console.log(\"Clien hashmap: \",clientReducer.clientHashMap);\n    console.log(\"ownprops: \",ownProps);\n    let clientSaleCount = null;\n    if(ownProps.idClient){\n        clientSaleCount = clientReducer.clientHashMap[ownProps.idClient].saleCount;\n    }\n    console.log(\"AppUser reducer:\", appUserReducer);\n    return {idCompany,modules,appUserSaleCount,companySaleCount,clientSaleCount};\n};\n\nexport default withRouter(connect(mapStateToProps)(SaleTable));\n"],"sourceRoot":""}